<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>51.0</apiVersion>
    <decisions>
        <name>S_N_Changed</name>
        <label>S/N Changed</label>
        <locationX>348</locationX>
        <locationY>348</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Changed</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.top_level_main_serial_number__c</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <elementReference>$Record__Prior.top_level_main_serial_number__c</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.AccountId</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Opp_Product</targetReference>
            </connector>
            <label>Changed</label>
        </rules>
    </decisions>
    <formulas>
        <name>Product</name>
        <dataType>String</dataType>
        <expression>TEXT({!Get_Opp_Product.Product_Type__c})</expression>
    </formulas>
    <interviewLabel>Case Serial Number Fill {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Case Serial Number Fill</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>FREE_FORM_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordLookups>
        <name>Get_Account</name>
        <label>Get Account</label>
        <locationX>584</locationX>
        <locationY>622</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Update_Case_Values</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Get_Opp.AccountId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Account</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Opp</name>
        <label>Get Opp</label>
        <locationX>584</locationX>
        <locationY>465</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Get_Account</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Get_Opp_Product.OpportunityId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Opportunity</object>
        <queriedFields>Id</queriedFields>
        <queriedFields>AccountId</queriedFields>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Opp_Product</name>
        <label>Get Opp Product</label>
        <locationX>584</locationX>
        <locationY>312</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Get_Opp</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Serial_Number__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.top_level_main_serial_number__c</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>OpportunityLineItem</object>
        <queriedFields>Id</queriedFields>
        <queriedFields>OpportunityId</queriedFields>
        <queriedFields>Product2Id</queriedFields>
        <queriedFields>ProductCode</queriedFields>
        <queriedFields>Product_Type__c</queriedFields>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordUpdates>
        <name>Update_Case_Values</name>
        <label>Update Case Values</label>
        <locationX>584</locationX>
        <locationY>768</locationY>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>AccountId</field>
            <value>
                <elementReference>Get_Account.Id</elementReference>
            </value>
        </inputAssignments>
        <object>Case</object>
    </recordUpdates>
    <start>
        <locationX>458</locationX>
        <locationY>48</locationY>
        <connector>
            <targetReference>S_N_Changed</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>top_level_main_serial_number__c</field>
            <operator>IsNull</operator>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </filters>
        <object>Case</object>
        <recordTriggerType>CreateAndUpdate</recordTriggerType>
        <triggerType>RecordAfterSave</triggerType>
    </start>
    <status>Active</status>
</Flow>
